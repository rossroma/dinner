<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Jasmine Spec Runner</title>
    
    <!-- Polyfill shim for older browsers -->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
    <script>
    var SCRIPT_TAGS = "";
    </script>
    <% var generateScriptTags = function(allScripts) { allScripts.forEach(function(script){ %>
        <script src='<%= script %>'></script>
    <% }); }; %>

    <!-- for each test, generate CSS/LESS link tags -->
    <% scripts.src.forEach(function(fullLessName) {
      var pathParts = fullLessName.split('/');
      var fullCssName = fullLessName.replace(/less/g, 'css');
      var lessName = pathParts[pathParts.length - 1];
      var name = lessName.split('.')[0]; %>
      <link id="original-less:test-less-<%= name %>" title="test-less-<%= name %>" rel="stylesheet/less" type="text/css" href="<%= fullLessName %>">
      <link id="expected-less:test-less-<%= name %>" rel="stylesheet" type="text/css" href="<%= fullCssName %>">
    <% }); %>

    <!-- generate grunt-contrib-jasmine link tags -->
    <% css.forEach(function(style){ %>
      <link rel="stylesheet" type="text/css" href="<%= style %>">
    <% }) %>
    <script>
          window.jasmine = { getJSReport: function() { } };
    </script>

  <%
        var jasmine = [].concat(scripts.polyfills, scripts.jasmine, scripts.boot),
            helpers = scripts.helpers,
            vendor = scripts.vendor,
            reporters = [].concat(scripts.reporters),
            specs = scripts.specs,
            allScripts = jasmine.concat(helpers).concat(vendor).concat(specs).concat(reporters);
    
        generateScriptTags(allScripts);
    %>
  </head>

  <body>
  <!-- content -->
    
  </body>
</html>
